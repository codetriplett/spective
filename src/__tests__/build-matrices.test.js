import { buildMatrices } from '../build-matrices';

describe('build-matrices', () => {
	let properties;

	beforeEach(() => {
		properties = {
			scale: [1.1, 2.2, 3.3],
			offset: [4.4, 5.5, 6.6],
			rotation: 7.7,
			tilt: 8.8,
			spin: 9.9,
			position: [10.01, 11.11, 12.21]
		};
	});

	it('should prepare matrices', () => {
		const actual = buildMatrices(properties);

		expect(actual).toEqual([
			[
				1.1, 0, 0, 0,
				0, 2.2, 0, 0,
				0, 0, 3.3, 0,
				0, 0, 0, 1
			], [
				1, 0, 0, 4.4,
				0, 1, 0, 5.5,
				0, 0, 1, 6.6,
				0, 0, 0, 1
			], [
				0.15337386203786435, 0, 0.9881682338770004, 0,
				0, 1, 0, 0,
				-0.9881682338770004, 0, 0.15337386203786435, 0,
				0, 0, 0, 1
			], [
				1, 0, 0, 0,
				0, -0.811093014061656, -0.5849171928917617, 0,
				0, 0.5849171928917617, -0.811093014061656, 0,
				0, 0, 0, 1
			], [
				-0.8891911526253609, 0.4575358937753214, 0, 0,
				-0.4575358937753214, -0.8891911526253609, 0, 0,
				0, 0, 1, 0,
				0, 0, 0, 1
			], [
				1, 0, 0, 10.01,
				0, 1, 0, 11.11,
				0, 0, 1, 12.21,
				0, 0, 0, 1
			]
		]);
	});

	it('should prepare inverse matrices', () => {
		const actual = buildMatrices(properties, true);

		expect(actual).toEqual([
			[
				1, 0, 0, -10.01,
				0, 1, 0, -11.11,
				0, 0, 1, -12.21,
				0, 0, 0, 1
			], [
				0.15337386203786435, 0, -0.9881682338770004, 0,
				0, 1, 0, 0,
				0.9881682338770004, 0, 0.15337386203786435, 0,
				0, 0, 0, 1
			], [
				1, 0, 0, 0,
				0, -0.811093014061656, 0.5849171928917617, 0,
				0, -0.5849171928917617, -0.811093014061656, 0,
				0, 0, 0, 1
			], [
				-0.8891911526253609, -0.4575358937753214, 0, 0,
				0.4575358937753214, -0.8891911526253609, 0, 0,
				0, 0, 1, 0,
				0, 0, 0, 1
			], [
				1, 0, 0, -4.4,
				0, 1, 0, -5.5,
				0, 0, 1, -6.6,
				0, 0, 0, 1
			], [
				0.9090909090909091, 0, 0, 0,
				0, 0.45454545454545453, 0, 0,
				0, 0, 0.30303030303030304, 0,
				0, 0, 0, 1
			]
		]);
	});

	it('should prepare reduced matrices', () => {
		const actual = buildMatrices(properties, true, true);

		expect(actual).toEqual([
			[
				0.15337386203786435, 0, -0.9881682338770004, 0,
				0, 1, 0, 0,
				0.9881682338770004, 0, 0.15337386203786435, 0,
				0, 0, 0, 1
			], [
				1, 0, 0, 0,
				0, -0.811093014061656, 0.5849171928917617, 0,
				0, -0.5849171928917617, -0.811093014061656, 0,
				0, 0, 0, 1
			], [
				-0.8891911526253609, -0.4575358937753214, 0, 0,
				0.4575358937753214, -0.8891911526253609, 0, 0,
				0, 0, 1, 0,
				0, 0, 0, 1
			]
		]);
	});

	it('should return empty array if nothing is provided', () => {
		const actual = buildMatrices();
		expect(actual).toHaveLength(0);
	});
});
